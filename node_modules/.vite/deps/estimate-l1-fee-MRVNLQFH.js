import {
  toSerializableTransaction
} from "./chunk-ZWJPBMWK.js";
import "./chunk-MVFD7GKI.js";
import "./chunk-NCXSBGTZ.js";
import {
  getContract
} from "./chunk-AOWXXJZS.js";
import {
  readContract,
  serializeTransaction
} from "./chunk-MEVR5ISQ.js";
import "./chunk-36AA74HP.js";
import "./chunk-TRL57KBW.js";
import "./chunk-QRXYB5TD.js";
import "./chunk-42HF4JSU.js";
import "./chunk-6I4IKEVR.js";
import "./chunk-FNSYAR6H.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-AH5C5NPR.js";
import "./chunk-EZ4JTQAA.js";
import "./chunk-4HQ6F7ND.js";
import "./chunk-KFTHUFKI.js";
import "./chunk-2E63JINA.js";

// node_modules/thirdweb/dist/esm/gas/estimate-l1-fee.js
var OPStackGasPriceOracleAddress = "0x420000000000000000000000000000000000000F";
async function estimateL1Fee(options) {
  const { transaction, gasPriceOracleAddress } = options;
  const oracleContract = getContract({
    client: transaction.client,
    address: gasPriceOracleAddress || OPStackGasPriceOracleAddress,
    chain: transaction.chain
  });
  const { gasPrice, ...serializableTx } = await toSerializableTransaction({
    transaction
  });
  const serialized = serializeTransaction({
    ...serializableTx,
    type: "eip1559"
  });
  return readContract({
    contract: oracleContract,
    method: "function getL1Fee(bytes memory _data) view returns (uint256)",
    params: [serialized]
  });
}
export {
  estimateL1Fee
};
//# sourceMappingURL=estimate-l1-fee-MRVNLQFH.js.map
